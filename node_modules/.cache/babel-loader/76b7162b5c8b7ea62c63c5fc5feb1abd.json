{"ast":null,"code":"export var getdata = function getdata(train) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase,\n        getFirestore = _ref.getFirestore,\n        firebase = _ref.firebase;\n    var db = getFirestore();\n    var find = db.collection(\"Train\").doc(\"Express_Mahanuwara\");\n    find.get().then(function (doc) {\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data());\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n};\nexport var createTrain = function createTrain(train) {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase,\n        getFirestore = _ref2.getFirestore,\n        firebase = _ref2.firebase;\n    var firestore = getFirestore();\n    var except = train.except.split('');\n    var i = 0;\n\n    for (i = 0; i < except.length; i++) {\n      var x = void 0;\n      x = parseInt(\"except[i]except[i]\");\n    }\n\n    firestore.collection(\"Train\").doc(train.colArr).set({\n      Details: {\n        Name: train.name,\n        RunBy: train.run,\n        Side: train.side,\n        Type: train.type,\n        Available: train.class,\n        RunByExcept: except\n      },\n      ColomboFort: {\n        Arr: train.colArr,\n        Dep: train.colDep,\n        stops: train.colStop\n      },\n      Maradana: {\n        Arr: train.marArr,\n        Dep: train.marDep,\n        stops: train.marStop\n      },\n      Dematagoda: {\n        Arr: train.demArr,\n        Dep: train.demDep,\n        stops: train.demStop\n      },\n      Kelaniya: {\n        Arr: train.kelArr,\n        Dep: train.kelDep,\n        stops: train.kelStop\n      },\n      Wanavasala: {\n        Arr: train.wanArr,\n        Dep: train.wanDep,\n        stops: train.wanStop\n      },\n      Hunupitiya: {\n        Arr: train.hunArr,\n        Dep: train.hunDep,\n        stops: train.hunStop\n      },\n      Enderamulla: {\n        Arr: train.endArr,\n        Dep: train.endDep,\n        stops: train.endStop\n      },\n      Horape: {\n        Arr: train.horArr,\n        Dep: train.horDep,\n        stops: train.horStop\n      },\n      Ragama: {\n        Arr: train.ragArr,\n        Dep: train.ragDep,\n        stops: train.ragStop\n      },\n      Walpola: {\n        Arr: train.walArr,\n        Dep: train.walDep,\n        stops: train.walStop\n      },\n      Batuwatte: {\n        Arr: train.batArr,\n        Dep: train.batDep,\n        stops: train.batStop\n      },\n      Bulugahagoda: {\n        Arr: train.bulArr,\n        Dep: train.bulDep,\n        stops: train.bulStop\n      },\n      Ganemulla: {\n        Arr: train.ganArr,\n        Dep: train.ganDep,\n        stops: train.ganStop\n      },\n      Yagoda: {\n        Arr: train.yagArr,\n        Dep: train.yagDep,\n        stops: train.yagStop\n      },\n      Gampaha: {\n        Arr: train.gamArr,\n        Dep: train.gamDep,\n        stops: train.gamStop\n      },\n      lat: 6.9331195,\n      lng: 79.847847,\n      time: 1565765415000,\n      createAt: new Date()\n    }).then(function () {\n      dispatch({\n        type: 'CREATE_TRAIN',\n        train: train\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'CREATE_TRAIN_ERROR',\n        err: err\n      });\n    });\n  };\n};\nexport var update = function update(train) {\n  return function (dispatch, getState, _ref3) {\n    var getFirebase = _ref3.getFirebase,\n        getFirestore = _ref3.getFirestore,\n        firebase = _ref3.firebase;\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Pramuditha Kaushalya\\Desktop\\TrainTracker\\traintracker\\src\\store\\action\\sheduleAction.js"],"names":["getdata","train","dispatch","getState","getFirebase","getFirestore","firebase","db","find","collection","doc","get","then","exists","console","log","data","catch","error","createTrain","firestore","except","split","i","length","x","parseInt","colArr","set","Details","Name","name","RunBy","run","Side","side","Type","type","Available","class","RunByExcept","ColomboFort","Arr","Dep","colDep","stops","colStop","Maradana","marArr","marDep","marStop","Dematagoda","demArr","demDep","demStop","Kelaniya","kelArr","kelDep","kelStop","Wanavasala","wanArr","wanDep","wanStop","Hunupitiya","hunArr","hunDep","hunStop","Enderamulla","endArr","endDep","endStop","Horape","horArr","horDep","horStop","Ragama","ragArr","ragDep","ragStop","Walpola","walArr","walDep","walStop","Batuwatte","batArr","batDep","batStop","Bulugahagoda","bulArr","bulDep","bulStop","Ganemulla","ganArr","ganDep","ganStop","Yagoda","yagArr","yagDep","yagStop","Gampaha","gamArr","gamDep","gamStop","lat","lng","time","createAt","Date","err","update"],"mappings":"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","sourcesContent":["export const getdata = (train) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore, firebase}) => {\r\n\r\n        const db = getFirestore();\r\n        var find = db.collection(\"Train\").doc(\"Express_Mahanuwara\");\r\n\r\n        find.get().then(function(doc) {\r\n            if (doc.exists) {\r\n                console.log(\"Document data:\", doc.data());\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n}\r\n\r\nexport const createTrain = (train) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore, firebase}) => {\r\n        \r\n        const firestore = getFirestore();\r\n        let except= train.except.split('');\r\n        let i = 0;\r\n        for(i=0; i<except.length; i++){\r\n            let x;\r\n            x= parseInt(\"except[i]except[i]\")\r\n        }\r\n        firestore.collection(\"Train\").doc(train.colArr).set({\r\n            Details:{Name:train.name,RunBy:train.run,Side:train.side,Type:train.type,Available:train.class,RunByExcept:except},\r\n            ColomboFort:{Arr:train.colArr,Dep:train.colDep,stops:train.colStop},\r\n            Maradana:{Arr:train.marArr,Dep:train.marDep,stops:train.marStop},\r\n            Dematagoda:{Arr:train.demArr,Dep:train.demDep,stops:train.demStop},\r\n            Kelaniya:{Arr:train.kelArr,Dep:train.kelDep,stops:train.kelStop},\r\n            Wanavasala:{Arr:train.wanArr,Dep:train.wanDep,stops:train.wanStop},\r\n            Hunupitiya:{Arr:train.hunArr,Dep:train.hunDep,stops:train.hunStop},\r\n            Enderamulla:{Arr:train.endArr,Dep:train.endDep,stops:train.endStop},\r\n            Horape:{Arr:train.horArr,Dep:train.horDep,stops:train.horStop},\r\n            Ragama:{Arr:train.ragArr,Dep:train.ragDep,stops:train.ragStop},\r\n            Walpola:{Arr:train.walArr,Dep:train.walDep,stops:train.walStop},\r\n            Batuwatte:{Arr:train.batArr,Dep:train.batDep,stops:train.batStop},\r\n            Bulugahagoda:{Arr:train.bulArr,Dep:train.bulDep,stops:train.bulStop},\r\n            Ganemulla:{Arr:train.ganArr,Dep:train.ganDep,stops:train.ganStop},\r\n            Yagoda:{Arr:train.yagArr,Dep:train.yagDep,stops:train.yagStop},\r\n            Gampaha:{Arr:train.gamArr,Dep:train.gamDep,stops:train.gamStop},\r\n            lat:6.9331195,\r\n            lng:79.847847,\r\n            time:1565765415000,\r\n            createAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_TRAIN', train});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_TRAIN_ERROR', err})\r\n        })\r\n    }\r\n};\r\n\r\nexport const update = (train) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore, firebase}) => {\r\n        \r\n       \r\n    }\r\n}; "]},"metadata":{},"sourceType":"module"}