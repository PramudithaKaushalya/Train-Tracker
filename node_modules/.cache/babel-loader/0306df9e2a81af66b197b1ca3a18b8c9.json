{"ast":null,"code":"export var getdata = function getdata(train) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase,\n        getFirestore = _ref.getFirestore,\n        firebase = _ref.firebase;\n    var db = getFirestore();\n    var find = db.collection(\"Train\").doc(\"Express_Mahanuwara\");\n    find.get().then(function (doc) {\n      if (doc.exists) {\n        console.log(\"Document data:\", doc.data());\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  };\n};\nexport var createTrain = function createTrain(train) {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase,\n        getFirestore = _ref2.getFirestore,\n        firebase = _ref2.firebase;\n    var firestore = getFirestore();\n    var except = train.except.split('');\n\n    for (i = 0; i < except.length; i++) {\n      firestore.collection(\"Train\").doc(train.colArr).set({\n        Details: {\n          Name: train.name,\n          RunBy: train.run,\n          Side: train.side,\n          Type: train.type,\n          Available: train.class,\n          RunByExcept: except\n        },\n        ColomboFort: {\n          Arr: train.colArr,\n          Dep: train.colDep,\n          stops: train.colStop\n        },\n        Maradana: {\n          Arr: train.marArr,\n          Dep: train.marDep,\n          stops: train.marStop\n        },\n        Dematagoda: {\n          Arr: train.demArr,\n          Dep: train.demDep,\n          stops: train.demStop\n        },\n        Kelaniya: {\n          Arr: train.kelArr,\n          Dep: train.kelDep,\n          stops: train.kelStop\n        },\n        Wanavasala: {\n          Arr: train.wanArr,\n          Dep: train.wanDep,\n          stops: train.wanStop\n        },\n        Hunupitiya: {\n          Arr: train.hunArr,\n          Dep: train.hunDep,\n          stops: train.hunStop\n        },\n        Enderamulla: {\n          Arr: train.endArr,\n          Dep: train.endDep,\n          stops: train.endStop\n        },\n        Horape: {\n          Arr: train.horArr,\n          Dep: train.horDep,\n          stops: train.horStop\n        },\n        Ragama: {\n          Arr: train.ragArr,\n          Dep: train.ragDep,\n          stops: train.ragStop\n        },\n        Walpola: {\n          Arr: train.walArr,\n          Dep: train.walDep,\n          stops: train.walStop\n        },\n        Batuwatte: {\n          Arr: train.batArr,\n          Dep: train.batDep,\n          stops: train.batStop\n        },\n        Bulugahagoda: {\n          Arr: train.bulArr,\n          Dep: train.bulDep,\n          stops: train.bulStop\n        },\n        Ganemulla: {\n          Arr: train.ganArr,\n          Dep: train.ganDep,\n          stops: train.ganStop\n        },\n        Yagoda: {\n          Arr: train.yagArr,\n          Dep: train.yagDep,\n          stops: train.yagStop\n        },\n        Gampaha: {\n          Arr: train.gamArr,\n          Dep: train.gamDep,\n          stops: train.gamStop\n        },\n        lat: 6.9331195,\n        lng: 79.847847,\n        time: 1565765415000,\n        createAt: new Date()\n      }).then(function () {\n        dispatch({\n          type: 'CREATE_TRAIN',\n          train: train\n        });\n      }).catch(function (err) {\n        dispatch({\n          type: 'CREATE_TRAIN_ERROR',\n          err: err\n        });\n      });\n    }\n  };\n};\nexport var update = function update(train) {\n  return function (dispatch, getState, _ref3) {\n    var getFirebase = _ref3.getFirebase,\n        getFirestore = _ref3.getFirestore,\n        firebase = _ref3.firebase;\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Pramuditha Kaushalya\\Desktop\\TrainTracker\\traintracker\\src\\store\\action\\sheduleAction.js"],"names":["getdata","train","dispatch","getState","getFirebase","getFirestore","firebase","db","find","collection","doc","get","then","exists","console","log","data","catch","error","createTrain","firestore","except","split","i","length","colArr","set","Details","Name","name","RunBy","run","Side","side","Type","type","Available","class","RunByExcept","ColomboFort","Arr","Dep","colDep","stops","colStop","Maradana","marArr","marDep","marStop","Dematagoda","demArr","demDep","demStop","Kelaniya","kelArr","kelDep","kelStop","Wanavasala","wanArr","wanDep","wanStop","Hunupitiya","hunArr","hunDep","hunStop","Enderamulla","endArr","endDep","endStop","Horape","horArr","horDep","horStop","Ragama","ragArr","ragDep","ragStop","Walpola","walArr","walDep","walStop","Batuwatte","batArr","batDep","batStop","Bulugahagoda","bulArr","bulDep","bulStop","Ganemulla","ganArr","ganDep","ganStop","Yagoda","yagArr","yagDep","yagStop","Gampaha","gamArr","gamDep","gamStop","lat","lng","time","createAt","Date","err","update"],"mappings":"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","sourcesContent":["export const getdata = (train) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore, firebase}) => {\r\n\r\n        const db = getFirestore();\r\n        var find = db.collection(\"Train\").doc(\"Express_Mahanuwara\");\r\n\r\n        find.get().then(function(doc) {\r\n            if (doc.exists) {\r\n                console.log(\"Document data:\", doc.data());\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n}\r\n\r\nexport const createTrain = (train) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore, firebase}) => {\r\n        \r\n        const firestore = getFirestore();\r\n        let except= train.except.split('');\r\n        for(i=0; i<except.length; i++)\r\n        firestore.collection(\"Train\").doc(train.colArr).set({\r\n            Details:{Name:train.name,RunBy:train.run,Side:train.side,Type:train.type,Available:train.class,RunByExcept:except},\r\n            ColomboFort:{Arr:train.colArr,Dep:train.colDep,stops:train.colStop},\r\n            Maradana:{Arr:train.marArr,Dep:train.marDep,stops:train.marStop},\r\n            Dematagoda:{Arr:train.demArr,Dep:train.demDep,stops:train.demStop},\r\n            Kelaniya:{Arr:train.kelArr,Dep:train.kelDep,stops:train.kelStop},\r\n            Wanavasala:{Arr:train.wanArr,Dep:train.wanDep,stops:train.wanStop},\r\n            Hunupitiya:{Arr:train.hunArr,Dep:train.hunDep,stops:train.hunStop},\r\n            Enderamulla:{Arr:train.endArr,Dep:train.endDep,stops:train.endStop},\r\n            Horape:{Arr:train.horArr,Dep:train.horDep,stops:train.horStop},\r\n            Ragama:{Arr:train.ragArr,Dep:train.ragDep,stops:train.ragStop},\r\n            Walpola:{Arr:train.walArr,Dep:train.walDep,stops:train.walStop},\r\n            Batuwatte:{Arr:train.batArr,Dep:train.batDep,stops:train.batStop},\r\n            Bulugahagoda:{Arr:train.bulArr,Dep:train.bulDep,stops:train.bulStop},\r\n            Ganemulla:{Arr:train.ganArr,Dep:train.ganDep,stops:train.ganStop},\r\n            Yagoda:{Arr:train.yagArr,Dep:train.yagDep,stops:train.yagStop},\r\n            Gampaha:{Arr:train.gamArr,Dep:train.gamDep,stops:train.gamStop},\r\n            lat:6.9331195,\r\n            lng:79.847847,\r\n            time:1565765415000,\r\n            createAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_TRAIN', train});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_TRAIN_ERROR', err})\r\n        })\r\n    }\r\n};\r\n\r\nexport const update = (train) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore, firebase}) => {\r\n        \r\n       \r\n    }\r\n}; "]},"metadata":{},"sourceType":"module"}