{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _reactPopper = require(\"react-popper\");\n\nvar _utils = require(\"./utils\");\n\nvar propTypes = {\n  children: _propTypes.default.node.isRequired,\n  className: _propTypes.default.string,\n  placement: _propTypes.default.string,\n  placementPrefix: _propTypes.default.string,\n  arrowClassName: _propTypes.default.string,\n  hideArrow: _propTypes.default.bool,\n  tag: _utils.tagPropType,\n  isOpen: _propTypes.default.bool.isRequired,\n  cssModule: _propTypes.default.object,\n  offset: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n  fallbackPlacement: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.array]),\n  flip: _propTypes.default.bool,\n  container: _utils.targetPropType,\n  target: _utils.targetPropType.isRequired,\n  modifiers: _propTypes.default.object,\n  boundariesElement: _propTypes.default.oneOfType([_propTypes.default.string, _utils.DOMElement])\n};\nvar defaultProps = {\n  boundariesElement: 'scrollParent',\n  placement: 'auto',\n  hideArrow: false,\n  isOpen: false,\n  offset: 0,\n  fallbackPlacement: 'flip',\n  flip: true,\n  container: 'body',\n  modifiers: {}\n};\nvar childContextTypes = {\n  popperManager: _propTypes.default.object.isRequired\n};\n\nvar PopperContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(PopperContent, _React$Component);\n\n  function PopperContent(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.handlePlacementChange = _this.handlePlacementChange.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.setTargetNode = _this.setTargetNode.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.getTargetNode = _this.getTargetNode.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.getRef = _this.getRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.state = {};\n    return _this;\n  }\n\n  var _proto = PopperContent.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      popperManager: {\n        setTargetNode: this.setTargetNode,\n        getTargetNode: this.getTargetNode\n      }\n    };\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this._element && this._element.childNodes && this._element.childNodes[0] && this._element.childNodes[0].focus) {\n      this._element.childNodes[0].focus();\n    }\n  };\n\n  _proto.setTargetNode = function setTargetNode(node) {\n    this.targetNode = node;\n  };\n\n  _proto.getTargetNode = function getTargetNode() {\n    return this.targetNode;\n  };\n\n  _proto.getContainerNode = function getContainerNode() {\n    return (0, _utils.getTarget)(this.props.container);\n  };\n\n  _proto.getRef = function getRef(ref) {\n    this._element = ref;\n  };\n\n  _proto.handlePlacementChange = function handlePlacementChange(data) {\n    if (this.state.placement !== data.placement) {\n      this.setState({\n        placement: data.placement\n      });\n    }\n\n    return data;\n  };\n\n  _proto.renderChildren = function renderChildren() {\n    var _this$props = this.props,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        isOpen = _this$props.isOpen,\n        flip = _this$props.flip,\n        target = _this$props.target,\n        offset = _this$props.offset,\n        fallbackPlacement = _this$props.fallbackPlacement,\n        placementPrefix = _this$props.placementPrefix,\n        _arrowClassName = _this$props.arrowClassName,\n        hideArrow = _this$props.hideArrow,\n        className = _this$props.className,\n        tag = _this$props.tag,\n        container = _this$props.container,\n        modifiers = _this$props.modifiers,\n        boundariesElement = _this$props.boundariesElement,\n        attrs = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"cssModule\", \"children\", \"isOpen\", \"flip\", \"target\", \"offset\", \"fallbackPlacement\", \"placementPrefix\", \"arrowClassName\", \"hideArrow\", \"className\", \"tag\", \"container\", \"modifiers\", \"boundariesElement\"]);\n    var arrowClassName = (0, _utils.mapToCssModules)((0, _classnames.default)('arrow', _arrowClassName), cssModule);\n    var placement = (this.state.placement || attrs.placement).split('-')[0];\n    var popperClassName = (0, _utils.mapToCssModules)((0, _classnames.default)(className, placementPrefix ? placementPrefix + \"-\" + placement : placement), this.props.cssModule);\n    var extendedModifiers = (0, _objectSpread2.default)({\n      offset: {\n        offset: offset\n      },\n      flip: {\n        enabled: flip,\n        behavior: fallbackPlacement\n      },\n      preventOverflow: {\n        boundariesElement: boundariesElement\n      },\n      update: {\n        enabled: true,\n        order: 950,\n        fn: this.handlePlacementChange\n      }\n    }, modifiers);\n    return _react.default.createElement(_reactPopper.Popper, (0, _extends2.default)({\n      modifiers: extendedModifiers\n    }, attrs, {\n      component: tag,\n      className: popperClassName,\n      \"x-placement\": this.state.placement || attrs.placement\n    }), children, !hideArrow && _react.default.createElement(_reactPopper.Arrow, {\n      className: arrowClassName\n    }));\n  };\n\n  _proto.render = function render() {\n    this.setTargetNode((0, _utils.getTarget)(this.props.target));\n\n    if (this.props.isOpen) {\n      return this.props.container === 'inline' ? this.renderChildren() : _reactDom.default.createPortal(_react.default.createElement(\"div\", {\n        ref: this.getRef\n      }, this.renderChildren()), this.getContainerNode());\n    }\n\n    return null;\n  };\n\n  return PopperContent;\n}(_react.default.Component);\n\nPopperContent.propTypes = propTypes;\nPopperContent.defaultProps = defaultProps;\nPopperContent.childContextTypes = childContextTypes;\nvar _default = PopperContent;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}