{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Pramuditha Kaushalya\\\\Desktop\\\\TrainTracker\\\\traintracker\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport var createMessage = function createMessage(message) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase,\n        getFirestore = _ref.getFirestore;\n    var firestore = getFirestore(); //const profile = getState().firebase.profile; \n\n    var adminId = getState().firebase.auth.uid;\n    firestore.collection('messages').add(_objectSpread({}, message, {\n      adminId: adminId,\n      createdOn: new Date()\n    })).then(function () {\n      dispatch({\n        type: 'CREATE_MESSAGE',\n        message: message\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR',\n        err: err\n      });\n    });\n  };\n};\nexport var driver = function driver(credentials) {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase,\n        getFirestore = _ref2.getFirestore;\n    var firebase = getFirebase();\n    firebase.auth().createUserWithEmailAndPassword(credentials.email, credentials.password).then(function () {\n      dispatch({\n        type: 'REGISTRATION_SUCCESS',\n        credentials: credentials\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'REGISTRATION_ERROR',\n        err: err\n      });\n    });\n    var firestore = getFirestore();\n    firestore.collection(\"drivers\").doc(credentials.email).set(_objectSpread({}, credentials, {\n      createAt: new Date()\n    })).then(function () {\n      dispatch({\n        type: 'CREATE_USER',\n        credentials: credentials\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'CREATE_USER_ERROR',\n        err: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Pramuditha Kaushalya\\Desktop\\TrainTracker\\traintracker\\src\\store\\action\\messageActions.js"],"names":["createMessage","message","dispatch","getState","getFirebase","getFirestore","firestore","adminId","firebase","auth","uid","collection","add","createdOn","Date","then","type","catch","err","driver","credentials","createUserWithEmailAndPassword","email","password","doc","set","createAt"],"mappings":";AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAY;AACrC,SAAM,UAACC,QAAD,EAAUC,QAAV,QAAmD;AAAA,QAA9BC,WAA8B,QAA9BA,WAA8B;AAAA,QAAlBC,YAAkB,QAAlBA,YAAkB;AACrD,QAAMC,SAAS,GAAGD,YAAY,EAA9B,CADqD,CAErD;;AACA,QAAME,OAAO,GAAGJ,QAAQ,GAAGK,QAAX,CAAoBC,IAApB,CAAyBC,GAAzC;AACAJ,IAAAA,SAAS,CAACK,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,mBACOX,OADP;AAEIM,MAAAA,OAAO,EAACA,OAFZ;AAGIM,MAAAA,SAAS,EAAG,IAAIC,IAAJ;AAHhB,QAIGC,IAJH,CAIQ,YAAK;AACTb,MAAAA,QAAQ,CAAC;AAACc,QAAAA,IAAI,EAAC,gBAAN;AAAuBf,QAAAA,OAAO,EAAPA;AAAvB,OAAD,CAAR;AACH,KAND,EAMGgB,KANH,CAMS,UAACC,GAAD,EAAQ;AACbhB,MAAAA,QAAQ,CAAC;AAACc,QAAAA,IAAI,EAAC,sBAAN;AAA6BE,QAAAA,GAAG,EAAHA;AAA7B,OAAD,CAAR;AAEH,KATD;AAWH,GAfD;AAgBH,CAjBM;AAmBP,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,WAAD,EAAiB;AACnC,SAAO,UAAClB,QAAD,EAAWC,QAAX,SAAqD;AAAA,QAA/BC,WAA+B,SAA/BA,WAA+B;AAAA,QAAlBC,YAAkB,SAAlBA,YAAkB;AACxD,QAAMG,QAAQ,GAAGJ,WAAW,EAA5B;AACAI,IAAAA,QAAQ,CAACC,IAAT,GAAgBY,8BAAhB,CACID,WAAW,CAACE,KADhB,EAEIF,WAAW,CAACG,QAFhB,EAGER,IAHF,CAGO,YAAM;AAETb,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAE,sBAAR;AAAgCI,QAAAA,WAAW,EAAXA;AAAhC,OAAD,CAAR;AACH,KAND,EAMGH,KANH,CAMS,UAACC,GAAD,EAAS;AACdhB,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAE,oBAAR;AAA8BE,QAAAA,GAAG,EAAHA;AAA9B,OAAD,CAAR;AACH,KARD;AASA,QAAMZ,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CAACK,UAAV,CAAqB,SAArB,EAAgCa,GAAhC,CAAoCJ,WAAW,CAACE,KAAhD,EAAuDG,GAAvD,mBACOL,WADP;AAEIM,MAAAA,QAAQ,EAAE,IAAIZ,IAAJ;AAFd,QAGGC,IAHH,CAGQ,YAAM;AACVb,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAE,aAAR;AAAuBI,QAAAA,WAAW,EAAXA;AAAvB,OAAD,CAAR;AACH,KALD,EAKGH,KALH,CAKS,UAACC,GAAD,EAAS;AACdhB,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAE,mBAAR;AAA6BE,QAAAA,GAAG,EAAHA;AAA7B,OAAD,CAAR;AACH,KAPD;AAQH,GApBD;AAqBH,CAtBM","sourcesContent":["export const createMessage = (message) =>{\r\n    return(dispatch,getState,{ getFirebase,getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        //const profile = getState().firebase.profile; \r\n        const adminId = getState().firebase.auth.uid;\r\n        firestore.collection('messages').add({\r\n            ...message,\r\n            adminId:adminId,\r\n            createdOn : new Date()\r\n        }).then(() =>{\r\n            dispatch({type:'CREATE_MESSAGE',message});\r\n        }).catch((err) =>{\r\n            dispatch({type:'CREATE_PROJECT_ERROR',err});\r\n            \r\n        })\r\n        \r\n    }\r\n};\r\n\r\nexport const driver = (credentials) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            \r\n            dispatch({ type: 'REGISTRATION_SUCCESS', credentials});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'REGISTRATION_ERROR', err})\r\n        })\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"drivers\").doc(credentials.email).set({\r\n            ...credentials,\r\n            createAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_USER', credentials});\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_USER_ERROR', err})\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}